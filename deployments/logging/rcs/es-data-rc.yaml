apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es-data
  namespace: logging
  labels:
    component: elasticsearch
    role: data
spec:
  replicas: 0
  revisionHistoryLimit: 2
  strategy:
      rollingUpdate:
        maxUnavailable: 1
        maxSurge: 0
  template:
    metadata:
      labels:
        component: elasticsearch
        role: data
    spec:
      serviceAccount: elasticsearch
      containers:
      - name: es-data
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        image: docker-release.otlabs.fr/docker-elasticsearch-kubernetes:2.4.1_1
        imagePullPolicy: Always
        resources:
                requests:
                  cpu: 10m
                  memory: 512Mi
                limits:
                  cpu: 7000m
                  memory: 512Mi

        env:
        - name: KUBERNETES_CA_CERTIFICATE_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: NODE_MASTER
          value: "false"
        - name: HTTP_ENABLE
          value: "false"
        - name: KUBERNETES_TRUST_CERTIFICATES
          value: "true"
        - name: ES_HEAP_SIZE
          value: "250m"
        - name: "NUMBER_OF_MASTERS"
          value: "2"
        - name: "NUMBER_OF_REPLICAS"
          value: "2"
        - name: "NUMBER_OF_SHARDS"
          value: "5"
        - name: ELASTICSEARCH_HOST
          value: "elasticsearch.logging"


        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP

        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh","/hooks/poststart.sh"]
          preStop:
            exec:
              command: ["/bin/bash","/hooks/prestop.sh"]

        livenessProbe:
          tcpSocket:
            port: 9300
          initialDelaySeconds: 300
          timeoutSeconds: 5

        readinessProbe:
          tcpSocket:
              port: 9300
          initialDelaySeconds: 300
          timeoutSeconds: 5

        volumeMounts:
        - mountPath: /data
          name: storage
        - name: hooks
          mountPath: /hooks

      nodeSelector:
        elastic: data

      terminationGracePeriodSeconds: 300
      volumes:
      - name: storage
        emptyDir: {}
        # hostPath:
        #     path: /var/lib/docker/elastic-data
      - name: hooks
        secret:
          secretName: hooks
